name: Java Build, Publish, and Terraform Apply

on:
  push:
    branches:
      - main
      - '*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Log in to Amazon ECR
        run: aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
        
      - name: Build Docker image
        run: docker build -t 244530008913.dkr.ecr.eu-west-1.amazonaws.com/ecrkandidat2028:latest .

      - name: Build and push Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          COMMIT_HASH=$(git rev-parse --short=8 HEAD)
          IMAGE_URI=244530008913.dkr.ecr.eu-west-1.amazonaws.com/ecrkandidat2028
          docker tag 244530008913.dkr.ecr.eu-west-1.amazonaws.com/ecrkandidat2028:latest $IMAGE_URI:$COMMIT_HASH
          docker push $IMAGE_URI:$COMMIT_HASH
          docker push $IMAGE_URI:latest

  terraform-apply:
    needs: build-and-publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up AWS credentials for Terraform
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Check if on main branch
        run: |
          if [ "${{ github.event_name }}" == "push" ] && [ "${{ github.ref }}" != "refs/heads/main" ]; then
            echo "Terraform will only run on the main branch. Exiting..."
            exit 0
          fi
        shell: bash

      - name: Configure Terraform
        run: |
          mkdir -p ~/.terraform
          echo 'terraform {
            backend "s3" {
              bucket = "kandidat-2028"
              key    = "terraform.tfstate"
              region = "eu-west-1"
            }
          }' > main.tf
        working-directory: ${{ github.workspace }}

      - name: Initialize Terraform
        run: terraform init
        working-directory: ${{ github.workspace }}

      - name: Apply Terraform changes
        run: terraform apply -auto-approve
        working-directory: ${{ github.workspace }}
